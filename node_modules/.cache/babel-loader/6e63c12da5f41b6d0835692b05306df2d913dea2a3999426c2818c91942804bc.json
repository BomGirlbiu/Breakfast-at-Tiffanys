{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5050/api';\nexport default {\n  name: 'UserManagement',\n  data() {\n    return {\n      searchTerm: '',\n      roleFilter: 'all',\n      statusFilter: 'all',\n      showAddUserModal: false,\n      showDeleteModal: false,\n      editingUser: null,\n      userToDelete: null,\n      userForm: {\n        name: '',\n        role: 'staff',\n        phone: '',\n        email: '',\n        joinDate: '',\n        status: 'active'\n      },\n      users: []\n      // 注释掉静态用户数据\n      /*\n      users: [\n        {\n          id: 'U001',\n          name: '张三',\n          role: 'admin',\n          phone: '13800138000',\n          email: 'zhangsan@example.com',\n          joinDate: '2023-01-15',\n          status: 'active',\n          avatar: 'https://randomuser.me/api/portraits/men/32.jpg'\n        },\n        {\n          id: 'U002',\n          name: '李四',\n          role: 'staff',\n          phone: '13800138001',\n          email: 'lisi@example.com',\n          joinDate: '2023-03-20',\n          status: 'active',\n          avatar: 'https://randomuser.me/api/portraits/women/44.jpg'\n        },\n        {\n          id: 'U003',\n          name: '王五',\n          role: 'cashier',\n          phone: '13800138002',\n          email: 'wangwu@example.com',\n          joinDate: '2023-06-10',\n          status: 'inactive',\n          avatar: 'https://randomuser.me/api/portraits/men/67.jpg'\n        }\n      ]\n      */\n    };\n  },\n  computed: {\n    filteredUsers() {\n      return this.users.filter(user => {\n        const matchesSearch = user.name.toLowerCase().includes(this.searchTerm.toLowerCase()) || user.id.toLowerCase().includes(this.searchTerm.toLowerCase()) || user.phone.includes(this.searchTerm) || user.email.toLowerCase().includes(this.searchTerm.toLowerCase());\n        const matchesRole = this.roleFilter === 'all' || user.role === this.roleFilter;\n        const matchesStatus = this.statusFilter === 'all' || user.status === this.statusFilter;\n        return matchesSearch && matchesRole && matchesStatus;\n      });\n    }\n  },\n  methods: {\n    // 获取用户数据\n    async fetchUsers() {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/users`);\n        // 转换API返回的数据格式以匹配组件需要的格式\n        this.users = response.data.map(user => ({\n          id: `U${String(user.id).padStart(3, '0')}`,\n          name: user.username,\n          role: user.role || 'staff',\n          // API中可能没有这个字段\n          phone: user.phone,\n          email: user.email,\n          joinDate: user.created_at.split('T')[0],\n          // 从ISO日期格式中提取日期部分\n          status: 'active',\n          // API中可能没有这个字段\n          avatar: `https://randomuser.me/api/portraits/${Math.random() > 0.5 ? 'men' : 'women'}/${Math.floor(Math.random() * 100)}.jpg`\n        }));\n      } catch (error) {\n        console.error('Error fetching users:', error);\n        alert('获取用户数据失败');\n      }\n    },\n    getRoleName(role) {\n      const roleNames = {\n        admin: '管理员',\n        staff: '员工',\n        cashier: '收银员'\n      };\n      return roleNames[role] || role;\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString('zh-CN');\n    },\n    editUser(user) {\n      this.editingUser = user;\n      this.userForm = {\n        ...user\n      };\n      this.showAddUserModal = true;\n    },\n    confirmDelete(user) {\n      this.userToDelete = user;\n      this.showDeleteModal = true;\n    },\n    async deleteUser() {\n      if (this.userToDelete) {\n        try {\n          // 从ID中提取数字部分\n          const userId = parseInt(this.userToDelete.id.replace('U', ''));\n          await axios.delete(`${API_BASE_URL}/users/${userId}`);\n          await this.fetchUsers();\n        } catch (error) {\n          console.error('Error deleting user:', error);\n          alert('删除用户失败');\n        }\n        this.showDeleteModal = false;\n        this.userToDelete = null;\n      }\n    },\n    async saveUser() {\n      try {\n        if (this.editingUser) {\n          // 更新现有用户\n          const userId = parseInt(this.editingUser.id.replace('U', ''));\n          await axios.put(`${API_BASE_URL}/users/${userId}`, {\n            username: this.userForm.name,\n            email: this.userForm.email,\n            phone: this.userForm.phone\n          });\n        } else {\n          // 添加新用户\n          const newUser = {\n            username: this.userForm.name,\n            password: 'password123',\n            // 默认密码\n            email: this.userForm.email,\n            phone: this.userForm.phone\n          };\n          await axios.post(`${API_BASE_URL}/users/register`, newUser);\n        }\n        await this.fetchUsers();\n        this.closeModal();\n      } catch (error) {\n        console.error('Error saving user:', error);\n        alert('保存用户失败');\n      }\n    },\n    closeModal() {\n      this.showAddUserModal = false;\n      this.editingUser = null;\n      this.userForm = {\n        name: '',\n        role: 'staff',\n        phone: '',\n        email: '',\n        joinDate: '',\n        status: 'active'\n      };\n    }\n  },\n  // 在组件创建时获取数据\n  created() {\n    this.fetchUsers();\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","name","data","searchTerm","roleFilter","statusFilter","showAddUserModal","showDeleteModal","editingUser","userToDelete","userForm","role","phone","email","joinDate","status","users","computed","filteredUsers","filter","user","matchesSearch","toLowerCase","includes","id","matchesRole","matchesStatus","methods","fetchUsers","response","get","map","String","padStart","username","created_at","split","avatar","Math","random","floor","error","console","alert","getRoleName","roleNames","admin","staff","cashier","formatDate","date","Date","toLocaleDateString","editUser","confirmDelete","deleteUser","userId","parseInt","replace","delete","saveUser","put","newUser","password","post","closeModal","created"],"sources":["src/components/UserManagement.vue"],"sourcesContent":["<template>\n  <div class=\"user-management\">\n    <div class=\"page-header\">\n      <h1 class=\"page-title\">用户管理</h1>\n      <button class=\"add-user-btn\" @click=\"showAddUserModal = true\">\n        <span class=\"icon\">+</span> 添加用户\n      </button>\n    </div>\n\n    <!-- 搜索和筛选 -->\n    <div class=\"control-panel\">\n      <div class=\"search-container\">\n        <input \n          type=\"search\" \n          v-model=\"searchTerm\" \n          placeholder=\"搜索用户...\" \n          class=\"search-input\"\n        >\n        <i class=\"search-icon\">🔍</i>\n      </div>\n      \n      <div class=\"filters\">\n        <select v-model=\"roleFilter\" class=\"filter-select\">\n          <option value=\"all\">所有角色</option>\n          <option value=\"admin\">管理员</option>\n          <option value=\"staff\">员工</option>\n          <option value=\"cashier\">收银员</option>\n        </select>\n        \n        <select v-model=\"statusFilter\" class=\"filter-select\">\n          <option value=\"all\">所有状态</option>\n          <option value=\"active\">在职</option>\n          <option value=\"inactive\">离职</option>\n        </select>\n      </div>\n    </div>\n\n    <!-- 用户列表 -->\n    <div class=\"user-table-container\">\n      <table class=\"user-table\">\n        <thead>\n          <tr>\n            <th>用户信息</th>\n            <th>角色</th>\n            <th>联系方式</th>\n            <th>入职日期</th>\n            <th>状态</th>\n            <th>操作</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"user in filteredUsers\" :key=\"user.id\">\n            <td class=\"user-info\">\n              <img :src=\"user.avatar\" :alt=\"user.name\" class=\"user-avatar\">\n              <div class=\"user-details\">\n                <div class=\"user-name\">{{ user.name }}</div>\n                <div class=\"user-id\">ID: {{ user.id }}</div>\n              </div>\n            </td>\n            <td>\n              <span :class=\"['role-badge', user.role]\">\n                {{ getRoleName(user.role) }}\n              </span>\n            </td>\n            <td>\n              <div class=\"contact-info\">\n                <div>{{ user.phone }}</div>\n                <div class=\"email\">{{ user.email }}</div>\n              </div>\n            </td>\n            <td>{{ formatDate(user.joinDate) }}</td>\n            <td>\n              <span :class=\"['status-badge', user.status]\">\n                {{ user.status === 'active' ? '在职' : '离职' }}\n              </span>\n            </td>\n            <td class=\"actions\">\n              <button class=\"action-btn edit\" @click=\"editUser(user)\">\n                <span class=\"icon\">✏️</span>\n              </button>\n              <button class=\"action-btn delete\" @click=\"confirmDelete(user)\">\n                <span class=\"icon\">🗑️</span>\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <!-- 添加/编辑用户模态框 -->\n    <div v-if=\"showAddUserModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h2>{{ editingUser ? '编辑用户' : '添加用户' }}</h2>\n          <button class=\"close-btn\" @click=\"closeModal\">&times;</button>\n        </div>\n        <div class=\"modal-body\">\n          <form @submit.prevent=\"saveUser\" class=\"user-form\">\n            <div class=\"form-group\">\n              <label>姓名</label>\n              <input type=\"text\" v-model=\"userForm.name\" required>\n            </div>\n            <div class=\"form-group\">\n              <label>角色</label>\n              <select v-model=\"userForm.role\" required>\n                <option value=\"admin\">管理员</option>\n                <option value=\"staff\">员工</option>\n                <option value=\"cashier\">收银员</option>\n              </select>\n            </div>\n            <div class=\"form-group\">\n              <label>手机号码</label>\n              <input type=\"tel\" v-model=\"userForm.phone\" required>\n            </div>\n            <div class=\"form-group\">\n              <label>邮箱</label>\n              <input type=\"email\" v-model=\"userForm.email\" required>\n            </div>\n            <div class=\"form-group\">\n              <label>入职日期</label>\n              <input type=\"date\" v-model=\"userForm.joinDate\" required>\n            </div>\n            <div class=\"form-group\">\n              <label>状态</label>\n              <select v-model=\"userForm.status\" required>\n                <option value=\"active\">在职</option>\n                <option value=\"inactive\">离职</option>\n              </select>\n            </div>\n            <div class=\"form-actions\">\n              <button type=\"button\" class=\"cancel-btn\" @click=\"closeModal\">取消</button>\n              <button type=\"submit\" class=\"save-btn\">保存</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n\n    <!-- 删除确认模态框 -->\n    <div v-if=\"showDeleteModal\" class=\"modal\">\n      <div class=\"modal-content delete-confirm\">\n        <h3>确认删除</h3>\n        <p>确定要删除用户 \"{{ userToDelete?.name }}\" 吗？此操作不可恢复。</p>\n        <div class=\"modal-actions\">\n          <button class=\"cancel-btn\" @click=\"showDeleteModal = false\">取消</button>\n          <button class=\"delete-btn\" @click=\"deleteUser\">确认删除</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:5050/api';\n\nexport default {\n  name: 'UserManagement',\n  data() {\n    return {\n      searchTerm: '',\n      roleFilter: 'all',\n      statusFilter: 'all',\n      showAddUserModal: false,\n      showDeleteModal: false,\n      editingUser: null,\n      userToDelete: null,\n      userForm: {\n        name: '',\n        role: 'staff',\n        phone: '',\n        email: '',\n        joinDate: '',\n        status: 'active'\n      },\n      users: [],\n      // 注释掉静态用户数据\n      /*\n      users: [\n        {\n          id: 'U001',\n          name: '张三',\n          role: 'admin',\n          phone: '13800138000',\n          email: 'zhangsan@example.com',\n          joinDate: '2023-01-15',\n          status: 'active',\n          avatar: 'https://randomuser.me/api/portraits/men/32.jpg'\n        },\n        {\n          id: 'U002',\n          name: '李四',\n          role: 'staff',\n          phone: '13800138001',\n          email: 'lisi@example.com',\n          joinDate: '2023-03-20',\n          status: 'active',\n          avatar: 'https://randomuser.me/api/portraits/women/44.jpg'\n        },\n        {\n          id: 'U003',\n          name: '王五',\n          role: 'cashier',\n          phone: '13800138002',\n          email: 'wangwu@example.com',\n          joinDate: '2023-06-10',\n          status: 'inactive',\n          avatar: 'https://randomuser.me/api/portraits/men/67.jpg'\n        }\n      ]\n      */\n    }\n  },\n  computed: {\n    filteredUsers() {\n      return this.users.filter(user => {\n        const matchesSearch = user.name.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\n                            user.id.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\n                            user.phone.includes(this.searchTerm) ||\n                            user.email.toLowerCase().includes(this.searchTerm.toLowerCase())\n        \n        const matchesRole = this.roleFilter === 'all' || user.role === this.roleFilter\n        const matchesStatus = this.statusFilter === 'all' || user.status === this.statusFilter\n        \n        return matchesSearch && matchesRole && matchesStatus\n      })\n    }\n  },\n  methods: {\n    // 获取用户数据\n    async fetchUsers() {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/users`);\n        // 转换API返回的数据格式以匹配组件需要的格式\n        this.users = response.data.map(user => ({\n          id: `U${String(user.id).padStart(3, '0')}`,\n          name: user.username,\n          role: user.role || 'staff', // API中可能没有这个字段\n          phone: user.phone,\n          email: user.email,\n          joinDate: user.created_at.split('T')[0], // 从ISO日期格式中提取日期部分\n          status: 'active', // API中可能没有这个字段\n          avatar: `https://randomuser.me/api/portraits/${Math.random() > 0.5 ? 'men' : 'women'}/${Math.floor(Math.random() * 100)}.jpg`\n        }));\n      } catch (error) {\n        console.error('Error fetching users:', error);\n        alert('获取用户数据失败');\n      }\n    },\n    \n    getRoleName(role) {\n      const roleNames = {\n        admin: '管理员',\n        staff: '员工',\n        cashier: '收银员'\n      }\n      return roleNames[role] || role\n    },\n    \n    formatDate(date) {\n      return new Date(date).toLocaleDateString('zh-CN')\n    },\n    \n    editUser(user) {\n      this.editingUser = user\n      this.userForm = { ...user }\n      this.showAddUserModal = true\n    },\n    \n    confirmDelete(user) {\n      this.userToDelete = user\n      this.showDeleteModal = true\n    },\n    \n    async deleteUser() {\n      if (this.userToDelete) {\n        try {\n          // 从ID中提取数字部分\n          const userId = parseInt(this.userToDelete.id.replace('U', ''));\n          await axios.delete(`${API_BASE_URL}/users/${userId}`);\n          await this.fetchUsers();\n        } catch (error) {\n          console.error('Error deleting user:', error);\n          alert('删除用户失败');\n        }\n        this.showDeleteModal = false;\n        this.userToDelete = null;\n      }\n    },\n    \n    async saveUser() {\n      try {\n        if (this.editingUser) {\n          // 更新现有用户\n          const userId = parseInt(this.editingUser.id.replace('U', ''));\n          await axios.put(`${API_BASE_URL}/users/${userId}`, {\n            username: this.userForm.name,\n            email: this.userForm.email,\n            phone: this.userForm.phone\n          });\n        } else {\n          // 添加新用户\n          const newUser = {\n            username: this.userForm.name,\n            password: 'password123', // 默认密码\n            email: this.userForm.email,\n            phone: this.userForm.phone\n          };\n          await axios.post(`${API_BASE_URL}/users/register`, newUser);\n        }\n        \n        await this.fetchUsers();\n        this.closeModal();\n      } catch (error) {\n        console.error('Error saving user:', error);\n        alert('保存用户失败');\n      }\n    },\n    \n    closeModal() {\n      this.showAddUserModal = false;\n      this.editingUser = null;\n      this.userForm = {\n        name: '',\n        role: 'staff',\n        phone: '',\n        email: '',\n        joinDate: '',\n        status: 'active'\n      }\n    }\n  },\n  \n  // 在组件创建时获取数据\n  created() {\n    this.fetchUsers();\n  }\n}\n</script>\n\n<style scoped>\n.user-management {\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: bold;\n  color: #333;\n  margin: 0;\n}\n\n.add-user-btn {\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 4px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 14px;\n  transition: background-color 0.2s;\n}\n\n.add-user-btn:hover {\n  background-color: #388E3C;\n}\n\n.control-panel {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  gap: 20px;\n}\n\n.search-container {\n  position: relative;\n  flex: 1;\n}\n\n.search-input {\n  width: 100%;\n  padding: 10px 12px 10px 36px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.search-icon {\n  position: absolute;\n  left: 12px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #666;\n}\n\n.filters {\n  display: flex;\n  gap: 10px;\n}\n\n.filter-select {\n  padding: 8px 12px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n  min-width: 120px;\n}\n\n.user-table-container {\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  overflow: hidden;\n}\n\n.user-table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.user-table th,\n.user-table td {\n  padding: 16px;\n  text-align: left;\n  border-bottom: 1px solid #eee;\n}\n\n.user-table th {\n  background-color: #f5f5f5;\n  font-weight: 500;\n  color: #666;\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.user-avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n.user-details {\n  display: flex;\n  flex-direction: column;\n}\n\n.user-name {\n  font-weight: 500;\n  color: #333;\n}\n\n.user-id {\n  font-size: 12px;\n  color: #666;\n}\n\n.role-badge {\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n}\n\n.role-badge.admin {\n  background-color: #E3F2FD;\n  color: #1976D2;\n}\n\n.role-badge.staff {\n  background-color: #E8F5E9;\n  color: #2E7D32;\n}\n\n.role-badge.cashier {\n  background-color: #FFF3E0;\n  color: #E65100;\n}\n\n.contact-info {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.email {\n  font-size: 12px;\n  color: #666;\n}\n\n.status-badge {\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n}\n\n.status-badge.active {\n  background-color: #E8F5E9;\n  color: #2E7D32;\n}\n\n.status-badge.inactive {\n  background-color: #FFEBEE;\n  color: #C62828;\n}\n\n.actions {\n  display: flex;\n  gap: 8px;\n}\n\n.action-btn {\n  padding: 6px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.action-btn.edit {\n  background-color: #E3F2FD;\n  color: #1976D2;\n}\n\n.action-btn.delete {\n  background-color: #FFEBEE;\n  color: #C62828;\n}\n\n.action-btn:hover {\n  opacity: 0.8;\n}\n\n/* 模态框样式 */\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background: white;\n  border-radius: 8px;\n  width: 100%;\n  max-width: 500px;\n  max-height: 90vh;\n  overflow-y: auto;\n}\n\n.modal-header {\n  padding: 20px;\n  border-bottom: 1px solid #eee;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.modal-header h2 {\n  margin: 0;\n  font-size: 20px;\n  color: #333;\n}\n\n.close-btn {\n  background: none;\n  border: none;\n  font-size: 24px;\n  color: #666;\n  cursor: pointer;\n}\n\n.modal-body {\n  padding: 20px;\n}\n\n.user-form {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.form-group label {\n  font-size: 14px;\n  color: #666;\n}\n\n.form-group input,\n.form-group select {\n  padding: 8px 12px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.form-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n  margin-top: 20px;\n}\n\n.cancel-btn,\n.save-btn,\n.delete-btn {\n  padding: 8px 20px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.2s;\n}\n\n.cancel-btn {\n  background-color: #f5f5f5;\n  color: #666;\n}\n\n.save-btn {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.delete-btn {\n  background-color: #f44336;\n  color: white;\n}\n\n.delete-confirm {\n  max-width: 400px;\n  text-align: center;\n}\n\n.delete-confirm h3 {\n  margin: 0 0 16px 0;\n  color: #333;\n}\n\n.delete-confirm p {\n  margin: 0 0 24px 0;\n  color: #666;\n}\n\n.modal-actions {\n  display: flex;\n  justify-content: center;\n  gap: 12px;\n}\n\n@media (max-width: 768px) {\n  .control-panel {\n    flex-direction: column;\n  }\n  \n  .filters {\n    width: 100%;\n  }\n  \n  .filter-select {\n    flex: 1;\n  }\n  \n  .user-table {\n    display: block;\n    overflow-x: auto;\n  }\n  \n  .modal-content {\n    margin: 20px;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}