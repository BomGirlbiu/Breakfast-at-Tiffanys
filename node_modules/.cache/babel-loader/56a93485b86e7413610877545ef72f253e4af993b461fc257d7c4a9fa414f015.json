{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\nexport default {\n  name: 'BreadInfo',\n  data() {\n    return {\n      searchTerm: '',\n      view: 'grid',\n      selectedCategory: 'all',\n      showEditModal: false,\n      showDeleteModal: false,\n      editingBread: null,\n      breadToDelete: null,\n      ingredientNames: [],\n      ingredientAmounts: [],\n      categories: [],\n      breadData: [],\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    filteredBread() {\n      return this.breadData.filter(bread => bread.name.toLowerCase().includes(this.searchTerm.toLowerCase()) && (this.selectedCategory === 'all' || bread.categoryId === this.selectedCategory));\n    },\n    filteredCategories() {\n      if (this.selectedCategory === 'all') {\n        return this.categories.filter(category => this.breadData.some(bread => bread.categoryId === category.id && bread.name.toLowerCase().includes(this.searchTerm.toLowerCase())));\n      } else {\n        return this.categories.filter(category => category.id === this.selectedCategory && this.breadData.some(bread => bread.categoryId === category.id && bread.name.toLowerCase().includes(this.searchTerm.toLowerCase())));\n      }\n    },\n    totalFilteredBread() {\n      return this.filteredBread.length;\n    }\n  },\n  methods: {\n    async fetchCategories() {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/categories`);\n        this.categories = response.data;\n      } catch (error) {\n        this.error = '获取分类失败';\n        console.error('Error fetching categories:', error);\n      }\n    },\n    async fetchBreads() {\n      this.loading = true;\n      try {\n        const params = {};\n        if (this.selectedCategory !== 'all') {\n          params.category = this.selectedCategory;\n        }\n        if (this.searchTerm) {\n          params.search = this.searchTerm;\n        }\n        const response = await axios.get(`${API_BASE_URL}/breads`, {\n          params\n        });\n        this.breadData = response.data.map(bread => ({\n          id: bread.id,\n          name: bread.name,\n          price: bread.price,\n          image: bread.image || 'https://via.placeholder.com/80',\n          categoryId: bread.category_id,\n          description: bread.description,\n          ingredients: bread.ingredients,\n          stock: bread.stock,\n          inStock: bread.in_stock\n        }));\n      } catch (error) {\n        this.error = '获取面包数据失败';\n        console.error('Error fetching breads:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    getBreadByCategory(categoryId) {\n      return this.breadData.filter(bread => bread.categoryId === categoryId && bread.name.toLowerCase().includes(this.searchTerm.toLowerCase()));\n    },\n    async saveBreadInfo() {\n      try {\n        // 更新原料对象\n        const ingredients = {};\n        this.ingredientNames.forEach((name, index) => {\n          if (name && this.ingredientAmounts[index]) {\n            ingredients[name] = this.ingredientAmounts[index];\n          }\n        });\n        this.editingBread.ingredients = ingredients;\n        if (this.editingBread.id) {\n          // 更新现有面包\n          await axios.put(`${API_BASE_URL}/breads/${this.editingBread.id}`, this.editingBread);\n        } else {\n          // 创建新面包\n          await axios.post(`${API_BASE_URL}/breads`, this.editingBread);\n        }\n        await this.fetchBreads();\n        this.closeEditModal();\n      } catch (error) {\n        this.error = '保存面包信息失败';\n        console.error('Error saving bread:', error);\n      }\n    },\n    async confirmDelete() {\n      if (this.breadToDelete) {\n        try {\n          await axios.delete(`${API_BASE_URL}/breads/${this.breadToDelete.id}`);\n          await this.fetchBreads();\n          this.closeDeleteModal();\n        } catch (error) {\n          this.error = '删除面包失败';\n          console.error('Error deleting bread:', error);\n        }\n      }\n    },\n    editBread(bread) {\n      this.editingBread = JSON.parse(JSON.stringify(bread));\n      this.ingredientNames = Object.keys(this.editingBread.ingredients);\n      this.ingredientAmounts = Object.values(this.editingBread.ingredients);\n      this.showEditModal = true;\n    },\n    deleteBread(bread) {\n      this.breadToDelete = bread;\n      this.showDeleteModal = true;\n    },\n    addIngredient() {\n      this.ingredientNames.push('');\n      this.ingredientAmounts.push('');\n    },\n    removeIngredient(index) {\n      this.ingredientNames.splice(index, 1);\n      this.ingredientAmounts.splice(index, 1);\n    },\n    closeEditModal() {\n      this.showEditModal = false;\n      this.editingBread = null;\n      this.ingredientNames = [];\n      this.ingredientAmounts = [];\n    },\n    closeDeleteModal() {\n      this.showDeleteModal = false;\n      this.breadToDelete = null;\n    },\n    addNewBread() {\n      this.editingBread = {\n        name: '',\n        price: '',\n        image: '',\n        categoryId: this.categories.length ? this.categories[0].id : '',\n        description: '',\n        ingredients: {},\n        stock: 0,\n        inStock: true\n      };\n      this.ingredientNames = [];\n      this.ingredientAmounts = [];\n      this.showEditModal = true;\n    }\n  },\n  watch: {\n    searchTerm() {\n      this.fetchBreads();\n    },\n    selectedCategory() {\n      this.fetchBreads();\n    }\n  },\n  async created() {\n    await this.fetchCategories();\n    await this.fetchBreads();\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","name","data","searchTerm","view","selectedCategory","showEditModal","showDeleteModal","editingBread","breadToDelete","ingredientNames","ingredientAmounts","categories","breadData","loading","error","computed","filteredBread","filter","bread","toLowerCase","includes","categoryId","filteredCategories","category","some","id","totalFilteredBread","length","methods","fetchCategories","response","get","console","fetchBreads","params","search","map","price","image","category_id","description","ingredients","stock","inStock","in_stock","getBreadByCategory","saveBreadInfo","forEach","index","put","post","closeEditModal","confirmDelete","delete","closeDeleteModal","editBread","JSON","parse","stringify","Object","keys","values","deleteBread","addIngredient","push","removeIngredient","splice","addNewBread","watch","created"],"sources":["src/components/BreadInfo.vue"],"sourcesContent":["<template>\n  <div class=\"bread-info\">\n    <div class=\"header-actions\">\n      <h1 class=\"page-title\">面包信息管理</h1>\n      <button class=\"add-bread-btn\" @click=\"addNewBread\">上架新品</button>\n    </div>\n    \n    <!-- 搜索和视图切换 -->\n    <div class=\"control-panel\">\n      <div class=\"search-container\">\n        <input \n          type=\"search\" \n          v-model=\"searchTerm\" \n          placeholder=\"搜索面包...\" \n          class=\"search-input\"\n        >\n        <i class=\"search-icon\">🔍</i>\n      </div>\n      \n      <div class=\"view-controls\">\n        <button \n          :class=\"['view-btn', { active: view === 'grid' }]\" \n          @click=\"view = 'grid'\"\n        >\n          网格视图\n        </button>\n        <button \n          :class=\"['view-btn', { active: view === 'table' }]\" \n          @click=\"view = 'table'\"\n        >\n          表格视图\n        </button>\n      </div>\n    </div>\n    \n    <!-- 分类选择器 -->\n    <div class=\"category-selector\">\n      <button \n        :class=\"['category-btn', { active: selectedCategory === 'all' }]\" \n        @click=\"selectedCategory = 'all'\"\n      >\n        全部分类\n      </button>\n      <button \n        v-for=\"category in categories\" \n        :key=\"category.id\"\n        :class=\"['category-btn', { active: selectedCategory === category.id }]\" \n        @click=\"selectedCategory = category.id\"\n      >\n        {{ category.name }}\n      </button>\n    </div>\n    \n    <!-- 网格视图 -->\n    <div v-if=\"view === 'grid'\" class=\"grid-view\">\n      <div v-for=\"category in filteredCategories\" :key=\"category.id\" class=\"category-section\">\n        <h2 class=\"category-title\">{{ category.name }}</h2>\n        <div class=\"bread-grid\">\n          <div \n            v-for=\"bread in getBreadByCategory(category.id)\" \n            :key=\"bread.id\" \n            class=\"bread-card\"\n          >\n            <div class=\"bread-card-header\">\n              <h3 class=\"bread-name\">{{ bread.name }}</h3>\n              <span class=\"price-tag\">¥{{ bread.price.toFixed(2) }}</span>\n            </div>\n            <div class=\"bread-card-content\">\n              <div class=\"bread-image-container\">\n                <img :src=\"bread.image\" :alt=\"bread.name\" class=\"bread-image\">\n              </div>\n              <div class=\"bread-details\">\n                <div class=\"ingredients-list\">\n                  <h4>原料:</h4>\n                  <ul>\n                    <li v-for=\"(amount, ingredient) in bread.ingredients\" :key=\"ingredient\">\n                      {{ ingredient }}: {{ amount }}\n                    </li>\n                  </ul>\n                </div>\n                <div class=\"bread-description\">\n                  {{ bread.description }}\n                </div>\n              </div>\n              <div class=\"action-buttons\">\n                <button class=\"edit-btn\" @click=\"editBread(bread)\">编辑信息</button>\n                <button class=\"delete-btn\" @click=\"deleteBread(bread)\">删除</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- 无结果提示 -->\n      <div v-if=\"filteredCategories.length === 0\" class=\"no-results\">\n        没有找到匹配的面包产品\n      </div>\n    </div>\n    \n    <!-- 表格视图 -->\n    <div v-else class=\"table-view\">\n      <div v-for=\"category in filteredCategories\" :key=\"category.id\" class=\"category-section\">\n        <h2 class=\"category-title\">{{ category.name }}</h2>\n        <table class=\"bread-table\">\n          <thead>\n            <tr>\n              <th class=\"image-col\">图片</th>\n              <th>名称</th>\n              <th>价格</th>\n              <th>原料</th>\n              <th>描述</th>\n              <th class=\"action-col\">操作</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"bread in getBreadByCategory(category.id)\" :key=\"bread.id\">\n              <td>\n                <img :src=\"bread.image\" :alt=\"bread.name\" class=\"table-bread-image\">\n              </td>\n              <td class=\"bread-name\">{{ bread.name }}</td>\n              <td>¥{{ bread.price.toFixed(2) }}</td>\n              <td>\n                <div class=\"ingredients-cell\">\n                  <span v-for=\"(amount, ingredient) in bread.ingredients\" :key=\"ingredient\">\n                    {{ ingredient }}: {{ amount }}\n                  </span>\n                </div>\n              </td>\n              <td class=\"description-cell\">{{ bread.description }}</td>\n              <td class=\"action-col\">\n                <button class=\"table-action-btn edit\" @click=\"editBread(bread)\">编辑</button>\n                <button class=\"table-action-btn delete\" @click=\"deleteBread(bread)\">删除</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      \n      <!-- 无结果提示 -->\n      <div v-if=\"filteredCategories.length === 0\" class=\"no-results\">\n        没有找到匹配的面包产品\n      </div>\n    </div>\n    \n    <!-- 分页 -->\n    <div class=\"pagination\">\n      <div class=\"pagination-info\">\n        显示 {{ totalFilteredBread }} 个面包中的 {{ totalFilteredBread }} 个\n      </div>\n      <div class=\"pagination-controls\">\n        <button class=\"pagination-btn\" disabled>\n          &lt;\n        </button>\n        <span class=\"pagination-text\">第 1 页，共 1 页</span>\n        <button class=\"pagination-btn\" disabled>\n          &gt;\n        </button>\n      </div>\n    </div>\n\n    <!-- 编辑面包信息模态框 -->\n    <div v-if=\"showEditModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h2>编辑面包信息</h2>\n          <button class=\"close-btn\" @click=\"closeEditModal\">&times;</button>\n        </div>\n        <div class=\"modal-body\">\n          <form @submit.prevent=\"saveBreadInfo\" class=\"bread-form\">\n            <div class=\"form-group\">\n              <label>名称</label>\n              <input type=\"text\" v-model=\"editingBread.name\" required>\n            </div>\n            <div class=\"form-group\">\n              <label>价格</label>\n              <input type=\"number\" v-model=\"editingBread.price\" step=\"0.01\" required>\n            </div>\n            <div class=\"form-group\">\n              <label>分类</label>\n              <select v-model=\"editingBread.categoryId\" required>\n                <option v-for=\"category in categories\" :key=\"category.id\" :value=\"category.id\">\n                  {{ category.name }}\n                </option>\n              </select>\n            </div>\n            <div class=\"form-group\">\n              <label>描述</label>\n              <textarea v-model=\"editingBread.description\" rows=\"3\" required></textarea>\n            </div>\n            <div class=\"form-group\">\n              <label>原料</label>\n              <div v-for=\"(amount, ingredient, index) in editingBread.ingredients\" :key=\"index\" class=\"ingredient-input\">\n                <input type=\"text\" v-model=\"ingredientNames[index]\" placeholder=\"原料名称\" required>\n                <input type=\"text\" v-model=\"ingredientAmounts[index]\" placeholder=\"用量\" required>\n                <button type=\"button\" class=\"remove-ingredient\" @click=\"removeIngredient(index)\">×</button>\n              </div>\n              <button type=\"button\" class=\"add-ingredient\" @click=\"addIngredient\">添加原料</button>\n            </div>\n            <div class=\"form-actions\">\n              <button type=\"button\" class=\"cancel-btn\" @click=\"closeEditModal\">取消</button>\n              <button type=\"submit\" class=\"save-btn\">保存</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n\n    <!-- 删除确认模态框 -->\n    <div v-if=\"showDeleteModal\" class=\"modal\">\n      <div class=\"modal-content delete-confirm\">\n        <h3>确认删除</h3>\n        <p>确定要删除面包 \"{{ breadToDelete?.name }}\" 吗？此操作不可恢复。</p>\n        <div class=\"modal-actions\">\n          <button class=\"cancel-btn\" @click=\"closeDeleteModal\">取消</button>\n          <button class=\"delete-btn\" @click=\"confirmDelete\">确认删除</button>\n        </div>\n      </div>\n    </div>\n\n    <!-- 加载状态 -->\n    <div v-if=\"loading\" class=\"loading\">\n      加载中...\n    </div>\n\n    <!-- 错误提示 -->\n    <div v-if=\"error\" class=\"error\">\n      {{ error }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:5000/api';\n\nexport default {\n  name: 'BreadInfo',\n  data() {\n    return {\n      searchTerm: '',\n      view: 'grid',\n      selectedCategory: 'all',\n      showEditModal: false,\n      showDeleteModal: false,\n      editingBread: null,\n      breadToDelete: null,\n      ingredientNames: [],\n      ingredientAmounts: [],\n      categories: [],\n      breadData: [],\n      loading: false,\n      error: null\n    }\n  },\n  computed: {\n    filteredBread() {\n      return this.breadData.filter(bread => \n        bread.name.toLowerCase().includes(this.searchTerm.toLowerCase()) &&\n        (this.selectedCategory === 'all' || bread.categoryId === this.selectedCategory)\n      );\n    },\n    \n    filteredCategories() {\n      if (this.selectedCategory === 'all') {\n        return this.categories.filter(category => \n          this.breadData.some(bread => \n            bread.categoryId === category.id && \n            bread.name.toLowerCase().includes(this.searchTerm.toLowerCase())\n          )\n        );\n      } else {\n        return this.categories.filter(category => \n          category.id === this.selectedCategory &&\n          this.breadData.some(bread => \n            bread.categoryId === category.id && \n            bread.name.toLowerCase().includes(this.searchTerm.toLowerCase())\n          )\n        );\n      }\n    },\n    \n    totalFilteredBread() {\n      return this.filteredBread.length;\n    }\n  },\n  methods: {\n    async fetchCategories() {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/categories`);\n        this.categories = response.data;\n      } catch (error) {\n        this.error = '获取分类失败';\n        console.error('Error fetching categories:', error);\n      }\n    },\n\n    async fetchBreads() {\n      this.loading = true;\n      try {\n        const params = {};\n        if (this.selectedCategory !== 'all') {\n          params.category = this.selectedCategory;\n        }\n        if (this.searchTerm) {\n          params.search = this.searchTerm;\n        }\n        \n        const response = await axios.get(`${API_BASE_URL}/breads`, { params });\n        this.breadData = response.data.map(bread => ({\n          id: bread.id,\n          name: bread.name,\n          price: bread.price,\n          image: bread.image || 'https://via.placeholder.com/80',\n          categoryId: bread.category_id,\n          description: bread.description,\n          ingredients: bread.ingredients,\n          stock: bread.stock,\n          inStock: bread.in_stock\n        }));\n      } catch (error) {\n        this.error = '获取面包数据失败';\n        console.error('Error fetching breads:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    getBreadByCategory(categoryId) {\n      return this.breadData.filter(bread => \n        bread.categoryId === categoryId &&\n        bread.name.toLowerCase().includes(this.searchTerm.toLowerCase())\n      );\n    },\n\n    async saveBreadInfo() {\n      try {\n        // 更新原料对象\n        const ingredients = {};\n        this.ingredientNames.forEach((name, index) => {\n          if (name && this.ingredientAmounts[index]) {\n            ingredients[name] = this.ingredientAmounts[index];\n          }\n        });\n        this.editingBread.ingredients = ingredients;\n\n        if (this.editingBread.id) {\n          // 更新现有面包\n          await axios.put(`${API_BASE_URL}/breads/${this.editingBread.id}`, this.editingBread);\n        } else {\n          // 创建新面包\n          await axios.post(`${API_BASE_URL}/breads`, this.editingBread);\n        }\n        \n        await this.fetchBreads();\n        this.closeEditModal();\n      } catch (error) {\n        this.error = '保存面包信息失败';\n        console.error('Error saving bread:', error);\n      }\n    },\n\n    async confirmDelete() {\n      if (this.breadToDelete) {\n        try {\n          await axios.delete(`${API_BASE_URL}/breads/${this.breadToDelete.id}`);\n          await this.fetchBreads();\n          this.closeDeleteModal();\n        } catch (error) {\n          this.error = '删除面包失败';\n          console.error('Error deleting bread:', error);\n        }\n      }\n    },\n\n    editBread(bread) {\n      this.editingBread = JSON.parse(JSON.stringify(bread));\n      this.ingredientNames = Object.keys(this.editingBread.ingredients);\n      this.ingredientAmounts = Object.values(this.editingBread.ingredients);\n      this.showEditModal = true;\n    },\n\n    deleteBread(bread) {\n      this.breadToDelete = bread;\n      this.showDeleteModal = true;\n    },\n\n    addIngredient() {\n      this.ingredientNames.push('');\n      this.ingredientAmounts.push('');\n    },\n\n    removeIngredient(index) {\n      this.ingredientNames.splice(index, 1);\n      this.ingredientAmounts.splice(index, 1);\n    },\n\n    closeEditModal() {\n      this.showEditModal = false;\n      this.editingBread = null;\n      this.ingredientNames = [];\n      this.ingredientAmounts = [];\n    },\n\n    closeDeleteModal() {\n      this.showDeleteModal = false;\n      this.breadToDelete = null;\n    },\n\n    addNewBread() {\n      this.editingBread = {\n        name: '',\n        price: '',\n        image: '',\n        categoryId: this.categories.length ? this.categories[0].id : '',\n        description: '',\n        ingredients: {},\n        stock: 0,\n        inStock: true\n      };\n      this.ingredientNames = [];\n      this.ingredientAmounts = [];\n      this.showEditModal = true;\n    }\n  },\n  watch: {\n    searchTerm() {\n      this.fetchBreads();\n    },\n    selectedCategory() {\n      this.fetchBreads();\n    }\n  },\n  async created() {\n    await this.fetchCategories();\n    await this.fetchBreads();\n  }\n}\n</script>\n\n<style scoped>\n.bread-info {\n  font-family: Arial, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: #f9f9f9;\n}\n\n.header-actions {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 20px;\n  color: #333;\n}\n\n/* 控制面板样式 */\n.control-panel {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.search-container {\n  position: relative;\n  width: 300px;\n}\n\n.search-input {\n  width: 100%;\n  padding: 8px 12px 8px 32px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.search-icon {\n  position: absolute;\n  left: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  font-size: 14px;\n  color: #666;\n}\n\n.view-controls {\n  display: flex;\n  gap: 8px;\n}\n\n.view-btn {\n  padding: 8px 12px;\n  background-color: #f0f0f0;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: all 0.2s;\n}\n\n.view-btn.active {\n  background-color: #4CAF50;\n  color: white;\n  border-color: #4CAF50;\n}\n\n/* 分类选择器样式 */\n.category-selector {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n  flex-wrap: wrap;\n}\n\n.category-btn {\n  padding: 8px 16px;\n  background-color: #f0f0f0;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: all 0.2s;\n}\n\n.category-btn.active {\n  background-color: #2196F3;\n  color: white;\n  border-color: #2196F3;\n}\n\n/* 分类标题 */\n.category-title {\n  font-size: 18px;\n  margin: 20px 0 10px 0;\n  padding-bottom: 5px;\n  border-bottom: 2px solid #eee;\n  color: #333;\n}\n\n/* 网格视图样式 */\n.bread-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n  margin-bottom: 30px;\n}\n\n.bread-card {\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  overflow: hidden;\n  background-color: white;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n  transition: transform 0.2s, box-shadow 0.2s;\n}\n\n.bread-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 5px 15px rgba(0,0,0,0.1);\n}\n\n.bread-card-header {\n  padding: 12px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid #eee;\n}\n\n.bread-name {\n  font-size: 16px;\n  font-weight: 500;\n  margin: 0;\n}\n\n.price-tag {\n  font-size: 18px;\n  font-weight: bold;\n  color: #4CAF50;\n}\n\n.bread-card-content {\n  padding: 12px;\n}\n\n.bread-image-container {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 12px;\n}\n\n.bread-image {\n  width: 120px;\n  height: 120px;\n  object-fit: cover;\n  border-radius: 4px;\n}\n\n.bread-details {\n  margin-bottom: 12px;\n}\n\n.ingredients-list {\n  margin-bottom: 10px;\n}\n\n.ingredients-list h4 {\n  margin: 0 0 5px 0;\n  color: #666;\n  font-size: 14px;\n}\n\n.ingredients-list ul {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.ingredients-list li {\n  font-size: 13px;\n  color: #666;\n  margin-bottom: 2px;\n}\n\n.bread-description {\n  font-size: 14px;\n  color: #666;\n  line-height: 1.4;\n}\n\n.action-buttons {\n  display: flex;\n  gap: 8px;\n}\n\n.edit-btn, .delete-btn {\n  flex: 1;\n  padding: 8px 0;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.2s;\n}\n\n.edit-btn {\n  background-color: #2196F3;\n  color: white;\n}\n\n.edit-btn:hover {\n  background-color: #1976D2;\n}\n\n.delete-btn {\n  background-color: #f44336;\n  color: white;\n}\n\n.delete-btn:hover {\n  background-color: #d32f2f;\n}\n\n/* 表格视图样式 */\n.bread-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 30px;\n  background-color: white;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n}\n\n.bread-table th,\n.bread-table td {\n  padding: 12px;\n  text-align: left;\n  border-bottom: 1px solid #eee;\n}\n\n.bread-table th {\n  background-color: #f5f5f5;\n  font-weight: 500;\n}\n\n.image-col {\n  width: 80px;\n}\n\n.action-col {\n  width: 120px;\n  text-align: right;\n}\n\n.table-bread-image {\n  width: 60px;\n  height: 60px;\n  object-fit: cover;\n  border-radius: 4px;\n}\n\n.ingredients-cell {\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n  font-size: 13px;\n  color: #666;\n}\n\n.description-cell {\n  max-width: 200px;\n  font-size: 14px;\n  color: #666;\n}\n\n.table-action-btn {\n  padding: 6px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 12px;\n  margin-left: 4px;\n}\n\n.table-action-btn.edit {\n  background-color: #2196F3;\n  color: white;\n}\n\n.table-action-btn.delete {\n  background-color: #f44336;\n  color: white;\n}\n\n/* 分页样式 */\n.pagination {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 20px;\n  padding-top: 20px;\n  border-top: 1px solid #eee;\n}\n\n.pagination-info {\n  font-size: 14px;\n  color: #666;\n}\n\n.pagination-controls {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.pagination-btn {\n  width: 32px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  background-color: #f5f5f5;\n  cursor: pointer;\n}\n\n.pagination-btn:disabled {\n  color: #ccc;\n  cursor: not-allowed;\n}\n\n.pagination-text {\n  font-size: 14px;\n}\n\n/* 无结果提示 */\n.no-results {\n  padding: 40px;\n  text-align: center;\n  background-color: white;\n  border-radius: 8px;\n  border: 1px solid #eee;\n  color: #666;\n  font-size: 16px;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .control-panel {\n    flex-direction: column;\n    align-items: stretch;\n  }\n  \n  .search-container {\n    width: 100%;\n    margin-bottom: 10px;\n  }\n  \n  .bread-grid {\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  }\n  \n  .pagination {\n    flex-direction: column;\n    gap: 10px;\n  }\n  \n  .description-cell {\n    max-width: 150px;\n  }\n}\n\n/* 模态框样式 */\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background: white;\n  border-radius: 8px;\n  width: 100%;\n  max-width: 500px;\n  max-height: 90vh;\n  overflow-y: auto;\n}\n\n.modal-header {\n  padding: 20px;\n  border-bottom: 1px solid #eee;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.modal-header h2 {\n  margin: 0;\n  font-size: 20px;\n  color: #333;\n}\n\n.close-btn {\n  background: none;\n  border: none;\n  font-size: 24px;\n  color: #666;\n  cursor: pointer;\n}\n\n.modal-body {\n  padding: 20px;\n}\n\n.bread-form {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.form-group label {\n  font-size: 14px;\n  color: #666;\n}\n\n.form-group input,\n.form-group select,\n.form-group textarea {\n  padding: 8px 12px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.form-group textarea {\n  resize: vertical;\n  min-height: 80px;\n}\n\n.ingredient-input {\n  display: flex;\n  gap: 8px;\n  margin-bottom: 8px;\n}\n\n.ingredient-input input {\n  flex: 1;\n}\n\n.remove-ingredient {\n  padding: 8px;\n  background: #ffebee;\n  color: #c62828;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.add-ingredient {\n  padding: 8px;\n  background: #e8f5e9;\n  color: #2e7d32;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-top: 8px;\n}\n\n.form-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n  margin-top: 20px;\n}\n\n.cancel-btn,\n.save-btn,\n.delete-btn {\n  padding: 8px 20px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.2s;\n}\n\n.cancel-btn {\n  background-color: #f5f5f5;\n  color: #666;\n}\n\n.save-btn {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.delete-btn {\n  background-color: #f44336;\n  color: white;\n}\n\n.delete-confirm {\n  max-width: 400px;\n  text-align: center;\n}\n\n.delete-confirm h3 {\n  margin: 0 0 16px 0;\n  color: #333;\n}\n\n.delete-confirm p {\n  margin: 0 0 24px 0;\n  color: #666;\n}\n\n.modal-actions {\n  display: flex;\n  justify-content: center;\n  gap: 12px;\n}\n\n@media (max-width: 768px) {\n  .modal-content {\n    margin: 20px;\n  }\n  \n  .ingredient-input {\n    flex-direction: column;\n  }\n}\n\n/* 加载状态样式 */\n.loading {\n  text-align: center;\n  padding: 20px;\n  color: #666;\n}\n\n.error {\n  text-align: center;\n  padding: 20px;\n  color: #c62828;\n  background-color: #ffebee;\n  border-radius: 4px;\n  margin: 10px 0;\n}\n\n.add-bread-btn {\n  background-color: #2196F3;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 18px;\n  font-size: 15px;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.add-bread-btn:hover {\n  background-color: #1976D2;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}